{"version":3,"sources":["assets/images/Blog-logo.png","store/reducers/body.jsx","store/actions/actionTypes.jsx","store/reducers/auth.jsx","components/UI/Header/Header.jsx","components/UI/Footer/Footer.jsx","components/UI/Button/Button.jsx","store/actions/body.jsx","components/UI/Modal/Modal.jsx","components/containers/Layout/Layout.jsx","components/UI/Spinner/Spinner.jsx","components/Post/Post.jsx","components/ComposePost/Compose.jsx","components/Card/Card.jsx","components/containers/Body/AddUI/AddUI.jsx","components/UI/DarkMode/DarkMode.jsx","components/containers/Body/Body.jsx","components/containers/Blog/Blog.jsx","App.js","index.js"],"names":["module","exports","initialState","posts","fullPost","darkMode","error","reducer","state","action","type","errorData","post","Header","useState","menuClass","setMenuClass","dropDownMenuClass","className","src","logoImg","alt","to","onClick","Footer","props","style","color","href","Date","getFullYear","Button","clicked","children","Failed","getPost","dispatch","axios","get","then","response","responseData","key","data","push","id","catch","err","message","connect","body","clearError","transform","opacity","Spinner","bodyTypes","useParams","title","setTitle","content","setContent","useEffect","allPosts","failed","postTitle","setPostTitle","postContent","setPostContent","postError","setPostError","isLoading","setIsLoading","onChange","event","target","value","placeholder","name","cols","rows","preventDefault","postData","history","Card","slice","AddUI","exact","checked","setChecked","htmlFor","text","map","Blog","path","component","Body","FullPost","Compose","App","Component","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","bodyReducer","auth","authReducer","store","createStore","applyMiddleware","thunk","interceptors","request","use","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21dd096b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Blog-logo.36410710.png\";","import * as actionTypes from '../actions/actionTypes';\r\n// import { updateObject } from './utility/utility';\r\n\r\nconst initialState = {\r\n    posts: null,\r\n    fullPost: null,\r\n    darkMode: false,\r\n    error: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POSTS:\r\n            return { \r\n                ...state,\r\n            posts: action.posts\r\n            }\r\n        case actionTypes.FAILEDREQUEST:\r\n            return {\r\n                ...state,\r\n                error: action.errorData\r\n            }\r\n        case actionTypes.CLEARERROR:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case actionTypes.FULLPOST:\r\n            return {\r\n                ...state,\r\n                fullPost: action.post\r\n            }\r\n        case actionTypes.DARKMODE:\r\n            return {\r\n                ...state,\r\n                darkMode: action.darkMode\r\n            }\r\n            \r\n           \r\n        default: return state;\r\n    }\r\n\r\n};\r\n\r\nexport default reducer;","export const POSTS = 'POSTS';\r\nexport const FULLPOST = 'FULLPOST';\r\nexport const FAILEDREQUEST = 'FAILEDREQUEST';\r\nexport const CLEARERROR = 'CLEARERROR';\r\nexport const DARKMODE = 'DARKMODE';","import * as actionTypes from \"../actions/actionTypes\"\r\n\r\n\r\nconst initialState = {\r\n    posts: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\nswitch  (action.type){\r\n    case (actionTypes.POSTS):\r\n        return {\r\n           \r\n            \r\n        }\r\n        \r\n       \r\n\r\n    default:\r\n       return state\r\n}\r\n}\r\n\r\nexport default reducer","import React, { useState } from \"react\";\r\nimport {FiMenu} from 'react-icons/fi';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport logoImg from '../../../assets/images/Blog-logo.png';\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n \r\n   const [menuClass, setMenuClass] = useState(false)\r\n\r\n   const dropDownMenuClass = () => {\r\n      // const event  = event.preventDefault()\r\n      setMenuClass(!menuClass)\r\n   };\r\n\r\n\r\n\r\n\r\n   return (\r\n       \r\n       <nav className='Header'>\r\n        <div className='HeaderContent'>\r\n           {/* NavLogo  */}\r\n           <div className='HeaderLogo'>\r\n            <img src={logoImg} alt=''/>\r\n            <h2>Blogista</h2> \r\n          </div> \r\n\r\n             {/* Nav links */}\r\n        <div className={menuClass ? 'MobileHeaderList' : 'HeaderList'}>\r\n           <Link to='/' \r\n           className='NavLink' onClick={menuClass ? dropDownMenuClass : null}>Home</Link>\r\n           <Link to='/add-post' \r\n           className='NavLink' onClick={menuClass ? dropDownMenuClass : null}>Compose</Link>\r\n        </div>\r\n\r\n        {/* Menu logo */}\r\n        <div className='Menu'>\r\n        <FiMenu onClick={dropDownMenuClass} className='Menu'/>\r\n        </div>\r\n        {/* Menu logo */}\r\n      </div>\r\n    </nav>\r\n    \r\n   )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { BsFacebook }  from 'react-icons/bs';\r\nimport {AiFillTwitterCircle, AiOutlineMail, AiFillInstagram} from 'react-icons/ai';\r\nimport './Footer.css'\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className='Footer' style={props.darkMode ? {color: '#c21858'} : null}>\r\n            <div className='info'>\r\n                <div  className='infoItems'>\r\n                    <BsFacebook className='icon Facebook'/>\r\n                     <a href=\"http://www.Facebook.com/master.yagi\">Facebook</a> \r\n                </div>\r\n               <div className='infoItems'>\r\n               <AiFillTwitterCircle className='icon twitter' />\r\n                   <a href=\"https://twitter.com/Ozoh17\">Twitter</a> \r\n               </div>\r\n                <div className='infoItems'>\r\n                    <AiFillInstagram className='icon instagram'/>\r\n                    <a href=\"http://www.instagram.com/herosdesign59\">Instagram</a>\r\n                </div>\r\n                <div className='infoItems'>\r\n                    <AiOutlineMail className='icon email'/>\r\n                    \r\n                    <a href=\"http://ozohefe@gmail.com\">email</a>\r\n                </div>\r\n                 \r\n            </div>\r\n            <div className='copywrite'>\r\n                <b>OzohEfe Copywrite©{new Date().getFullYear()}</b>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport './Button.css'\r\n\r\nconst Button = props => {\r\n   return (\r\n         <button onClick={props.clicked}>\r\n             {props.children}\r\n         </button>\r\n     )\r\n}\r\n\r\n\r\n export default Button;","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const Post = (data) => {\r\n    \r\n    \r\n    return {\r\n        type: actionTypes.POSTS,\r\n        posts: data\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const FullPost = (data) => {\r\n    console.log(data.content)\r\n    return {\r\n        type: actionTypes.FULLPOST,\r\n        post: data\r\n    }\r\n}\r\n\r\nexport const Failed = errorData => {\r\n    return {\r\n        type: actionTypes.FAILEDREQUEST,\r\n        errorData: errorData\r\n    }\r\n}\r\n\r\nexport const clearError = (data) => {\r\n    return {\r\n        type: actionTypes.CLEARERROR\r\n    }\r\n};\r\n\r\nexport const darkMode = (data) => {\r\n    return {\r\n        type: actionTypes.DARKMODE,\r\n        darkMode: data\r\n    }\r\n};\r\n\r\n\r\nexport const getPost = () => {\r\n    return dispatch => {\r\n        axios.get('https://blogista-b03e9-default-rtdb.firebaseio.com//UserPost.json')\r\n        .then(response => {\r\n            // console.log(response.data)\r\n            const responseData = []\r\n\r\n            for(let key in response.data){\r\n                responseData.push({\r\n                    ...response.data[key],\r\n                    id: key\r\n                })\r\n            }\r\n            // console.log(responseData)\r\n            dispatch(Post(responseData))\r\n        })\r\n        .catch(err => {\r\n            // console.log(err.message)\r\n            dispatch(Failed(err.message))\r\n        })\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../Button/Button';\r\nimport * as bodyTypes from '../../../store/actions/body';\r\nimport './Modal.css'\r\n\r\nconst Modal = props => {\r\n    // const [show, setShow] = useState(false);\r\n\r\n\r\n\r\n    const showHandler = () => {\r\n       props.clearError()      \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div  className='Modal'\r\n        style={{transform: props.error ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.error ? '1': '0'}}>\r\n        <h2 className='error' style={props.darkMode ? {color: 'gold'} : null}>{props.error}</h2>\r\n            \r\n            <Button clicked={showHandler} >Cancle</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n const mapStateToProps = state => {\r\n     return {\r\n         error: state.body.error,\r\n         darkMode: state.body.darkMode\r\n     }\r\n\r\n }\r\n\r\n const mapDispatchToProps = dispatch => {\r\n     return {\r\n         clearError: (data) => dispatch(bodyTypes.clearError(data))\r\n     }\r\n\r\n }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Header from '../../UI/Header/Header';\r\nimport Footer from '../../UI/Footer/Footer';\r\nimport './Layout.css'\r\nimport Modal from '../../UI/Modal/Modal'\r\n\r\nconst Layout = props => {\r\n    return (\r\n        <div className={props.darkMode ? 'DarkMode' : 'Layout' }>\r\n            <Header darkMode={props.darkMode} />\r\n            <Modal/>\r\n          {props.children} \r\n            <Footer darkMode={props.darkMode}/> \r\n        </div>\r\n    ) \r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        darkMode: state.body.darkMode,\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Layout);","import React from 'react';\r\n\r\nimport './Spinner.css'\r\n\r\nconst Spinner = props => {\r\n    return (\r\n        <div className='Spinner'>\r\n        <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n        <h4 className='Children'>{props.children}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport * as bodyTypes from '../../store/actions/body';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport './Post.css'\r\n\r\n\r\n\r\nconst FullPost = props => {\r\n  const {id} = useParams()\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  \r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    \r\n    axios.get(`https://blogista-b03e9-default-rtdb.firebaseio.com/UserPost/${id}.json`)\r\n    .then(response => {\r\n      setTitle(response.data.title)\r\n      setContent(response.data.content)\r\n    }\r\n    ).catch(err => props.error(err.message))\r\n  \r\n  }, [])\r\n\r\n\r\n  let post = title ? <div><h2>{title}</h2>\r\n      <p>{content}</p></div> : <Spinner className='Spinner'>Please wait</Spinner>\r\n\r\n\r\n  return (\r\n        <div style={props.darkMode ? {color: 'gold'} : null} className='Post'>\r\n          {post}\r\n            \r\n       </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    post: state.body.fullPost,\r\n    darkMode: state.body.darkMode\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    error: (data) => dispatch(bodyTypes.Failed(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (FullPost);","import React, {useState } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Compose.css'\r\nimport * as bodyTypes from '../../store/actions/body';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst Compose = props => {\r\n\r\n  const [postTitle, setPostTitle] = useState('');\r\n  const [postContent, setPostContent] = useState('');\r\n  const [postError, setPostError] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n\r\n  const postHandler = (event) => {\r\n    event.preventDefault()\r\n    const postData = {\r\n      title: postTitle,\r\n      content: postContent\r\n    };\r\n    if(postData.title && postData.content){\r\n      setIsLoading(true)\r\n      axios.post('https://blogista-b03e9-default-rtdb.firebaseio.com//UserPost.json', postData)\r\n    .then(response => {\r\n      setIsLoading(false)\r\n       props.history.push('/')\r\n    })\r\n    .catch(error => {\r\n      setIsLoading(false)\r\n      props.failed(error.message)\r\n    })\r\n    }else{\r\n       setPostError('Please input Title and Content')\r\n    }\r\n    \r\n  };\r\n\r\n\r\n  \r\n\r\n    return (\r\n      <div className='Compose'>\r\n       \r\n        <form className='inputs'>\r\n          <h3 className='inputError'>{postError}</h3>\r\n\r\n          \r\n            {/* title input */}\r\n            <div className='InputItem inputTitle'>\r\n               <b className='DesktopText'>Title:   </b>\r\n                <b className='MobileText'>Title</b>\r\n               <input \r\n               onChange={event => {\r\n                const title = event.target.value;\r\n                setPostTitle(title)\r\n\r\n               }}\r\n               className='title'\r\n                type=\"text\" \r\n                placeholder='Title' />\r\n             </div>\r\n\r\n             {/* content input */}\r\n             <div className='InputItem'>\r\n               <b className='DesktopText'>Compose:   </b>\r\n               <b className='MobileText'>Compose</b>\r\n               <textarea \r\n               onChange={event => {\r\n                const content = event.target.value;\r\n                setPostContent(content)\r\n\r\n               }}\r\n               type=\"text\"\r\n               className='content'  \r\n               name=\"content\" \r\n               placeholder=\"write your post\"\r\n               cols=\"30\" rows=\"10\"></textarea>\r\n            </div>\r\n\r\n\r\n            {/* loading button */} \r\n            <div className='button'>\r\n            {!isLoading ? <Button clicked={postHandler } >POST</Button> : <Spinner></Spinner>}\r\n            </div>\r\n            \r\n        </form>\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      allPosts: state.body.posts,\r\n      error: state.body.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      post: () => dispatch(bodyTypes.getPost()),\r\n      failed: (error) => dispatch(bodyTypes.Failed(error))\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Compose);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n\r\n   \r\n        \r\n      return ( \r\n      <Link className='Card'\r\n            to={`/full-post/${props.id}`}>\r\n            <h3>{props.title}</h3>  \r\n            <p>{props.content.slice(0, 150) + '...'}</p>\r\n        </Link>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './AddUI.css';\r\n\r\nconst AddUI = () => {\r\n\r\n    return  (\r\n        <div className='Add'>\r\n         <NavLink className='Link' exact to='/add-post'><h1>+</h1></NavLink>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default AddUI;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as bodyTypes from '../../../store/actions/body';\r\nimport './DarkMode.css';\r\n\r\nconst DarkMode = (props) => {\r\n   \r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const inputClicked = (event) => {\r\n        // const targetchecked = event.target.checked;\r\n\r\n        if(checked){\r\n            props.darkMode(false)\r\n            setChecked(false)\r\n        }else{\r\n            props.darkMode(true)\r\n            setChecked(true)\r\n        }\r\n    }\r\n\r\n    return  (\r\n    <div>\r\n        <input type=\"checkbox\" checked={checked} className=\"toggle\"  id=\"check\" onChange={inputClicked}/>\r\n        <label checked={checked} htmlFor=\"check\" text=\"\"></label>\r\n    </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        darkMode: (data) => dispatch(bodyTypes.darkMode(data))\r\n    }\r\n};\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(DarkMode);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as bodyTypes from '../../../store/actions/body';\r\n\r\nimport Card from '../../Card/Card';\r\nimport AddUI from './AddUI/AddUI';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport DarkMode from '../../UI/DarkMode/DarkMode';\r\nimport './Body.css'\r\n\r\nconst Body = props => {\r\n    \r\n    useEffect(() =>{\r\n       props.post()\r\n    },[]);\r\n\r\n    const posts = props.allPosts ? props.allPosts.map(posts => (\r\n     <Card key={posts.id}\r\n      id={posts.id}\r\n       title={posts.title} \r\n       content={posts.content}/>\r\n    )\r\n     ) : props.error ?  null : <Spinner>Please wait...</Spinner>\r\n\r\n\r\n    return (\r\n        <div className='Body'>\r\n            <DarkMode />\r\n            <h2 className='PostLine'>Latests Posts</h2>\r\n            <div className={props.allPosts ? 'Cards' : 'Spinner'}>\r\n                 {posts}\r\n        </div> \r\n         <AddUI />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allPosts: state.body.posts,\r\n        error: state.body.error\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        post: () => dispatch(bodyTypes.getPost()),\r\n        // postId: (id) => dispatch(bodyTypes.getFullPost(id))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","import React from 'react';\r\nimport { Route} from 'react-router-dom';\r\n\r\nimport Layout from '../Layout/Layout'\r\nimport FullPost from '../../Post/Post';\r\nimport Compose from '../../ComposePost/Compose';\r\nimport './Blog.css'\r\nimport Body from '../Body/Body';\r\n\r\n\r\n\r\nconst Blog = () => {\r\n\r\n    return (\r\n        <Layout>\r\n            <Route exact path='/' component={Body} />\r\n            <Route path='/full-post/:id' component={FullPost} />\r\n            <Route path='/add-post' component={Compose} />\r\n        </Layout>\r\n    )\r\n\r\n};\r\n\r\nexport default Blog;","import React, {Component} from \"react\"\nimport Blog from \"./components/containers/Blog/Blog\"\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <Blog />   \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport {createStore  , compose, combineReducers, applyMiddleware} from \"redux\";\nimport thunk from 'redux-thunk';\nimport axios from \"axios\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport bodyReducer from \"./store/reducers/body\"\nimport authReducer from \"./store/reducers/auth\"\n\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    body: bodyReducer,\n    auth: authReducer\n\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\naxios.interceptors.request.use(request => {\n    // console.log(request)\n    return request\n});\n\nReactDOM.render (\n    <Provider store={store}>\n    <BrowserRouter>\n        <App title=\"App Manager\"/> \n    </BrowserRouter>\n    </Provider>\n\n, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}